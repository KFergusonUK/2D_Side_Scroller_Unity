using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerControl : MonoBehaviour
{
    private float moveSpeed;
    private float moveHorizontal;
    private float moveVertical;
    private bool facingRight;
    private float jumpForce;
    private bool isJumping;
    private Rigidbody2D rb2d;

    // Start is called before the first frame update
    void Start()
    {
        rb2d = GetComponent<Rigidbody2D>();
        moveSpeed = 10f;
        jumpForce = 20f;
        isJumping = false;
    }

    // Update is called once per frame
    void Update()
    {
        moveHorizontal = Input.GetAxisRaw("Horizontal");
        //moveVertical = Input.GetAxisRaw("Vertical");

        // Handle jumping
        if (Input.GetButtonDown("Jump") && !isJumping)
        {
            rb2d.AddForce(new Vector2(0f, jumpForce), ForceMode2D.Impulse);
            isJumping = true;
            Debug.Log("Jumping is now true");
        }
    }

    void FixedUpdate()
    {
        // Method of movement:
        Vector2 movement = new Vector2(moveHorizontal * moveSpeed, 0.0f);
        transform.position = (Vector2)transform.position + movement * Time.deltaTime;


        // Flip player's sprite when going left or right:
        flip(moveHorizontal);
    }

    // Flip player sprite horizontally depending on facing direction:
    void flip(float moveHorizontal)
    {
        if (moveHorizontal < 0 && !facingRight || moveHorizontal > 0.1 && facingRight)
        {
            facingRight = !facingRight;

            Vector3 scale = transform.localScale;
            scale.x *= -1;
            transform.localScale = scale;
        }
    }


    void OnTriggerEnter2D(Collider2D collision)
    {
        if (collision.gameObject.tag == "Platform")
        {
            isJumping = false;
            Debug.Log("Jumping is now false");
        }
    }

    void OnTriggerExit2D(Collider2D collision)
    {
        if (collision.gameObject.tag == "Platform")
        {
            isJumping = true;
            Debug.Log("Jumping is now true");
        }
    }
}
